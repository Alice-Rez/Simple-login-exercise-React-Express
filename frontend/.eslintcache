[{"/home/dci/Desktop/DCI/Express/day3/login/frontend/src/App.jsx":"1"},{"size":2869,"mtime":1606743736707,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"e6gdi","/home/dci/Desktop/DCI/Express/day3/login/frontend/src/App.jsx",["7"],"import { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Button,\n} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: \"25ch\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    showPassword: false,\n  });\n  const [data, setData] = useState({});\n\n  const [userInfo, setUserInfo] = useState({});\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const getValue = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const requestServer = (e) => {\n    e.preventDefault();\n    console.log(\"server was called\");\n    Axios({\n      method: \"POST\",\n      url: \"http://localhost:5005/users/login\",\n      data: data,\n    })\n      .then((response) => setUserInfo(response.data.userData))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Login</h1>\n      <form onSubmit={requestServer}>\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"E-mail\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          value={data.email}\n          onChange={getValue}\n        />\n        <FormControl\n          className={clsx(classes.margin, classes.textField)}\n          variant=\"outlined\"\n        >\n          <InputLabel htmlFor=\"outlined-adornment-password\">\n            Password\n          </InputLabel>\n          <OutlinedInput\n            required\n            id=\"outlined-adornment-password\"\n            name=\"pwd\"\n            value={data.pwd}\n            onChange={getValue}\n            type={values.showPassword ? \"text\" : \"password\"}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            labelWidth={70}\n          />\n        </FormControl>\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"8","severity":1,"message":"9","line":33,"column":10,"nodeType":"10","messageId":"11","endLine":33,"endColumn":18},"no-unused-vars","'userInfo' is assigned a value but never used.","Identifier","unusedVar"]